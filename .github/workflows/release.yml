name: Auto Release

on:
  push:
    tags:
      - "v*.*.*" # Triggers on version tags like v1.0.0, v1.2.3, etc.

permissions:
  contents: write
  issues: read
  pull-requests: read

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for changelog generation

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Analyze code
        run: flutter analyze

      - name: Generate changelog for this release
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git tag --sort=-version:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -2 | tail -1)
          CURRENT_TAG=${GITHUB_REF#refs/tags/}

          echo "Previous tag: $PREV_TAG"
          echo "Current tag: $CURRENT_TAG"

          # Generate changelog
          if [ -z "$PREV_TAG" ]; then
            # First release
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            # Subsequent releases
            CHANGELOG=$(git log $PREV_TAG..$CURRENT_TAG --pretty=format:"- %s (%h)" --no-merges)
          fi

          # Save changelog to file and output
          echo "$CHANGELOG" > changelog.txt
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.tag }}
          name: Release ${{ steps.get_version.outputs.tag }}
          body: |
            ## ðŸš€ Release ${{ steps.get_version.outputs.version }}

            ### ðŸ“‹ Changes in this release:
            ${{ steps.changelog.outputs.changelog }}

            ### ðŸ“¦ Installation
            Add this to your `pubspec.yaml`:
            ```yaml
            dependencies:
              app_notification_handler:
                git:
                  url: https://github.com/Shahzad-Official/app_local_notification_handler.git
                  ref: ${{ steps.get_version.outputs.tag }}
            ```

            ### ðŸ“š Documentation
            - [README](https://github.com/Shahzad-Official/app_local_notification_handler/blob/main/README.md)
            - [Setup Guide](https://github.com/Shahzad-Official/app_local_notification_handler/blob/main/SETUP_GUIDE.md)
            - [Usage Examples](https://github.com/Shahzad-Official/app_local_notification_handler/blob/main/USAGE_EXAMPLE.md)
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify success
        run: |
          echo "âœ… Release ${{ steps.get_version.outputs.tag }} created successfully!"
          echo "ðŸ”— Release URL: https://github.com/Shahzad-Official/app_local_notification_handler/releases/tag/${{ steps.get_version.outputs.tag }}"
